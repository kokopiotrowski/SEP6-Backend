/*
 * SEP6-movies backend
 *
 * Backend part of the project delivered for SEP6 course - Movies platform  Authors of project:  Konrad Piotrowski (280053) Aleksander Stefan Bialik (280027)
 *
 * API version: 1.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"net/http"
	"studies/SEP6-Backend/auth"
	"studies/SEP6-Backend/db"
	"studies/SEP6-Backend/reserr"
	swagger "studies/SEP6-Backend/swagger/models"
	"studies/SEP6-Backend/util"
)

func UserLoginPost(w http.ResponseWriter, r *http.Request) {
	var loginInput swagger.Login
	if util.DecodeBodyAsJSON(w, r, &loginInput) {
		util.RespondWithJSON(w, r, http.StatusOK, "Dummy response - login", nil)
	}
}

func UserPlaylistAddToFavouritePost(w http.ResponseWriter, r *http.Request) {

	util.RespondWithJSON(w, r, http.StatusOK, "Dummy response - add to favourite", nil)
}

func UserPlaylistGetFavouriteGet(w http.ResponseWriter, r *http.Request) {
	util.RespondWithJSON(w, r, http.StatusOK, "Dummy response - get favourite", nil)
}

func UserPlaylistRemoveFromFavouriteMovieIdDelete(w http.ResponseWriter, r *http.Request) {
	util.RespondWithJSON(w, r, http.StatusOK, "Dummy response - remove from favourite playlist", nil)
}

func UserRegisterPost(w http.ResponseWriter, r *http.Request) {
	var register swagger.Register
	if util.DecodeBodyAsJSON(w, r, &register) {
		db, err := db.GetDB()
		if err != nil {
			util.RespondWithJSON(w, r, http.StatusInternalServerError, nil, reserr.Internal("DB retrieve error", err, "could not access database"))
			return
		}
		_, err = auth.RegisterUser(db, register)
		if err != nil {
			util.RespondWithJSON(w, r, http.StatusInternalServerError, nil, reserr.Internal("Registering failed ", err, ""))
			return
		}
		util.RespondWithJSON(w, r, http.StatusOK, "User registered", nil)
	}

}
